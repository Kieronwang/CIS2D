The Java Design Patterns and APIs course for Android showed me how to work with the Android version of Java based on the outdated Apache Harmony including common design techniques and working with Android Studio and IntelliJ.
	The first exercise from the first section had me download and install Android Studio and run an Android app. I learned how to run an app on an Android device by using an Android phone’s emulator and was able to test the sample application on the emulator to see what the function of the app was. 
	The first exercise from section three helped me better understand inheritance by calling methods and overriding the methods from superclasses. I edited code in an XML file as well and I learned how the xml affects the application. It’s best to call the the superclass methods before calling any subclass methods and overriding the superclass.
	The last exercise was about event handlers which which declared, implement an interface. We set up callback methods by first defining an interface that declares the name and structure of the method we want to call and then declare a class that implements that interface. Our example was an anonymous class because it was only being used once and was initialized inline. So we set up a callback method with the interface.
	What I learned the most about was the process by which I can create an Android app and run it but I also got more practice with inheritance and interfaces.
